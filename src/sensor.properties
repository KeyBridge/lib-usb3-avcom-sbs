#----------------------------------------------------------
# Sensor Properties Configuration
#----------------------------------------------------------
# only the sensor ID is required - everything else may be 
# configured on line and will be updated with repository
# values if present. If not present, these values will be used
sensor.id=mclean00
sensor.addr.latitutude=
sensor.addr.longitude=
sensor.addr.address=1600 Tysons Blvd, Suite 450
sensor.addr.city=McLean
sensor.addr.state=VA
sensor.addr.zip=22102

#----------------------------------------------------------
# where the device is connected to the computer
# options are 'DUMMY' or 'USB' (typ refers to /dev/ttyUSB0)
#sensor.com.port=DUMMY
#sensor.com.port=USB

#----------------------------------------------------------
# how many seconds to wait between sensor.status messages
# if null or zero, will default to every 5 minutes
# minimum value is 5 (seconds)
sensor.status.message.delay=10

#----------------------------------------------------------
# set the sensor debug messaging detail
# default is 'no'
# 0 = no debugging
# 1 = sensor
# 2 = messenger
# 3 = device connector
# 4 = analytics
# 100 = all
sensor.set.debug.level.0=no
sensor.set.debug.level.1=no
sensor.set.debug.level.2=no
sensor.set.debug.level.3=no
sensor.set.debug.level.4=no
sensor.set.debug.level.100=no

#----------------------------------------------------------
# should the sensor send incremental datagrams or only complete
# default is 'no'
# if yes, then only incremental waveforms will be sent
# if no, then only complete waveforms will be sent
#sensor.streaming.mode=yes
sensor.streaming.mode=no

#----------------------------------------------------------
# should the sensor connect to the network
# if no, sensor will NOT connect to the network and cannot
# be remotely controlled
# default is 'yes'
sensor.messenger=yes

#----------------------------------------------------------
# sensor.data    message topic  info
sensor.mq.data.url=mq://k5:7676/jms
sensor.mq.data.user=guest
sensor.mq.data.pass=guest
sensor.mq.data.topic=sensor.data
# sensor.status  message topic  info
sensor.mq.status.url=mq://k5:7676/jms
sensor.mq.status.user=guest
sensor.mq.status.pass=guest
sensor.mq.status.topic=sensor.status
# sensor.control message queue  info
sensor.mq.control.url=mq://k5:7676/jms
sensor.mq.control.user=guest
sensor.mq.control.pass=guest
sensor.mq.control.queue=sensor.control

# data is published to a topic
#mq.topic=mclean.va
#mq.topic.user=guest
#mq.topic.pass=guest
# queue is used for control messaging
#mq.queue.url=mq://k5:7676/jms
#mq.queue=mclean.va
#mq.queue.user=guest
#mq.queue.pass=guest

#----------------------------------------------------------
# Initial operating parameters. You may list up to 100 jobs 
# Format is sensor.job.[integer].parameter=value
# where [integer] is a sequential number and must be a value 
# between 0 and 100. It is not the job serial number, which will be
# automatically assigned by the sensor.
# Job number '0' is typically reserved for the GUI and shouldn't
# be used here if possible.
# Job serial numbers must be unique, if not, duplicates will be rejected
# All frequency values are in MHz
# Poll timer is the delay between scans for this job (in seconds)
#   Poll timer value of zero means run as fast as possible
# center frequency     range is 5    to 2500  in increments of 1
# span                 range is 0    to 1300  in increments of 1
# resolution bandwidth range is 0.01 to 1.0   (auto match to closest value)
# sensitivity level    range is 0    to 50    (auto match to closest value)
# poll frequency       range is 0    to ~

# Job Example
#sensor.job.1.center.frequency=1000
#sensor.job.1.span=200
#sensor.job.1.resolution.bandwidth=1
#sensor.job.1.reference.level=50
#sensor.job.1.poll.frequency=1000

# Job 1
sensor.job.1.center.frequency=700
sensor.job.1.span=200
sensor.job.1.resolution.bandwidth=1
sensor.job.1.reference.level=50
sensor.job.1.poll.frequency=1

# Job 2
sensor.job.2.center.frequency=500
sensor.job.2.span=200
sensor.job.2.resolution.bandwidth=1
sensor.job.2.reference.level=50
sensor.job.2.poll.frequency=5

# Job 3
sensor.job.3.center.frequency=1300
sensor.job.3.span=1300
sensor.job.3.resolution.bandwidth=1
sensor.job.3.reference.level=50
sensor.job.3.poll.frequency=10

